// ============================================
// The Graphics class file
//
// Copyright 2022 Georgia Tech. All rights reserved.
// The materials provided by the instructor in this course are for
// the use of the students currently enrolled in the course.
// Copyrighted course materials may not be further disseminated.
// This file must NOT be made publicly available anywhere.
//==================================================================


#include "graphics.h"

#include "globals.h"

#define BLACK 0x000000
#define WHITE 0xFFFFFF
#define GREEN 0x00FF00
#define DARKGREEN 0x0c6624
#define LIGHTGREEN 0x1ee656
#define RED 0xFF0000
#define BROWN 0x964B00
#define YELLOW 0xFFF200
#define BLUE 0x0000FF

void draw_nothing(int u, int v)
{
    uLCD.filled_rectangle(u, v, u+10, v+10, BLACK);
}

void draw_img(int u, int v, const char* img)
{
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (img[i] == 'R') colors[i] = RED;
        else if (img[i] == 'Y') colors[i] = 0xFFFF00;   // Yellow
        else if (img[i] == 'G') colors[i] = GREEN;
        else if (img[i] == 'D') colors[i] = 0xD2691E;   // "Dirt"
        else if (img[i] == '5') colors[i] = LGREY;      // 50% grey
        else if (img[i] == '3') colors[i] = DGREY;
        else colors[i] = BLACK;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}
int bombSprite[1][11][11] = {{
    {BLACK, BLACK, BLACK, BLACK, BLACK, YELLOW, YELLOW, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BLACK, BLACK, BLACK, BLACK, YELLOW, BLACK, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BLACK, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, BLACK, BLACK},
    {BLACK, WHITE, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, WHITE, BLACK},
    {WHITE, BLACK, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, WHITE, BLACK, WHITE},
    {WHITE, BLACK, WHITE, WHITE, RED, RED, WHITE, WHITE, WHITE, BLACK, WHITE},
    {WHITE, BLACK, WHITE, WHITE, RED, WHITE, RED, WHITE, WHITE, BLACK, WHITE},
    {BLACK, WHITE, BLACK, WHITE, RED, RED, RED, WHITE, BLACK, WHITE, BLACK},
    {BLACK, BLACK, WHITE, BLACK, RED, WHITE, RED, BLACK, WHITE, BLACK, BLACK},
    {BLACK, BLACK, BLACK, WHITE, RED, RED, WHITE, WHITE, BLACK, BLACK, BLACK},
    {BLACK, BLACK, BLACK, BLACK, WHITE, BLACK, WHITE, BLACK, BLACK, BLACK, BLACK}
    }};
    

void draw_bomb(int u, int v)
{
    // TODO: Implement
    //May need to design a viper head sprite
    //Tile still need to be designed on paper
    uLCD.BLIT(u, v, 11, 11, &bombSprite[0][0][0]);
}

int wallSprite[1][11][11] = {{
    {BROWN, BROWN, RED, RED, RED, BROWN, RED, RED, RED, BROWN, BROWN},
    {BROWN, BROWN, RED, RED, RED, BROWN, RED, RED, RED, BROWN, BROWN},
    {BROWN, BROWN, RED, RED, RED, BROWN, RED, RED, RED, BROWN, BROWN},
    {BROWN, BLACK, BLACK, BLACK, BROWN, BROWN, BROWN, BLACK, BLACK, BLACK, BROWN},
    {BROWN, BLACK, BLACK, BLACK, BROWN, BROWN, BROWN, BLACK, BLACK, BLACK, BROWN},
    {BROWN, BROWN, RED, RED, RED, BROWN, RED, RED, RED, BROWN, BROWN},
    {BROWN, BLACK, BLACK, BLACK, BROWN, BROWN, BROWN, BLACK, BLACK, BLACK, BROWN},
    {BROWN, BLACK, BLACK, BLACK, BROWN, BROWN, BROWN, BLACK, BLACK, BLACK, BROWN},
    {BROWN, BROWN, RED, RED, RED, BROWN, RED, RED, RED, BROWN, BROWN},
    {BROWN, BROWN, RED, RED, RED, BROWN, RED, RED, RED, BROWN, BROWN},
    {BROWN, BROWN, RED, RED, RED, BROWN, RED, RED, RED, BROWN, BROWN}
    }};

void draw_wall(int u, int v)
{
    // TODO: Implement
    //May need to design a viper head sprite
    //Tile still need to be designed on paper
    uLCD.BLIT(u, v, 11, 11, &wallSprite[0][0][0]);
}

int plantSprite[1][11][11] = {{
    {BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK}, 
    {BLACK, BLACK, BLACK, BLACK, BLACK, YELLOW, BLACK, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BLACK, BLACK, BLACK, YELLOW, YELLOW, YELLOW, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BLACK, BLACK, YELLOW, YELLOW, BROWN, YELLOW, YELLOW, BLACK, BLACK, BLACK},
    {BLACK, BLACK, YELLOW, YELLOW, BROWN, BROWN, BROWN, YELLOW, YELLOW, BLACK, BLACK},
    {BLACK, BLACK, YELLOW, YELLOW, YELLOW, BROWN, YELLOW, YELLOW, YELLOW, BLACK, BLACK},
    {BLACK, YELLOW, YELLOW, YELLOW, GREEN, GREEN, GREEN, YELLOW, YELLOW, YELLOW, BLACK},
    {BLACK, BLACK, YELLOW, BLACK, GREEN, GREEN, GREEN, BLACK, YELLOW, BLACK, BLACK},
    {BLACK, BLACK, BLACK, BLACK, GREEN, GREEN, GREEN, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BLACK, BLACK, BLACK, GREEN, GREEN, GREEN, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK}
    }};

void draw_plant(int u, int v)
{
    // TODO: Implement
    //May need to design a viper head sprite
    //Tile still need to be designed on paper
    uLCD.BLIT(u, v, 11, 11, &plantSprite[0][0][0]);
}

int chestSprite[1][11][11] = {{
    {BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BROWN, YELLOW, RED, YELLOW, BROWN, YELLOW, RED, YELLOW, BROWN, BLACK},
    {BLACK, BROWN, YELLOW, YELLOW, YELLOW, BROWN, YELLOW, YELLOW, YELLOW, BROWN, BLACK},
    {BLACK, BLACK, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BLACK, BLACK},
    {BLACK, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BLACK},
    {BLACK, BROWN, BROWN, BROWN, BLACK, BLACK, BLACK, BROWN, BROWN, BROWN, BLACK},
    {BLACK, BLACK, BLACK, BLACK, BLACK, YELLOW, BLACK, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BROWN, BROWN, BROWN, BLACK, BLACK, BLACK, BROWN, BROWN, BROWN, BLACK},
    {BLACK, BLACK, BLACK, BROWN, BROWN, BROWN, BROWN, BROWN, BLACK, BLACK, BLACK},
    {BLACK, BLACK, RED, BLACK, BROWN, BROWN, BROWN, BLACK, RED, BLACK, BLACK},
    {BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK}
    }};


void draw_chest(int u, int v)
{
    // TODO: Implement
    //May need to design a viper head sprite
    //Tile still need to be designed on paper
    uLCD.BLIT(u, v, 11, 11, &chestSprite[0][0][0]);
}

int viperBodySprite[1][11][11] = {{
    {DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, DARKGREEN, RED, DARKGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN},
    {DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, DARKGREEN, RED, DARKGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN},
    {DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, DARKGREEN, RED, DARKGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN},
    {DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, DARKGREEN, RED, DARKGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN},
    {DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, DARKGREEN, RED, DARKGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN},
    {DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, DARKGREEN, RED, DARKGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN},
    {DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, DARKGREEN, RED, DARKGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN},
    {DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, DARKGREEN, RED, DARKGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN},
    {DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, DARKGREEN, RED, DARKGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN},
    {DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, DARKGREEN, RED, DARKGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN},
    {DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, DARKGREEN, RED, DARKGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN}
    }};


void draw_viper_body(int u, int v)
{
    // TODO: Implement
    //May need to design a viper head sprite
    //Tile still need to be designed on paper
    uLCD.BLIT(u, v, 11, 11, &viperBodySprite[0][0][0]);
}
int viperHeadSprite[1][11][11] = {{
    {LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN},
    {LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN},
    {LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, YELLOW, LIGHTGREEN, LIGHTGREEN},
    {LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, YELLOW, RED, YELLOW, LIGHTGREEN},
    {LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, YELLOW, LIGHTGREEN, LIGHTGREEN},
    {LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN},
    {LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN},
    {LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN},
    {LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN},
    {LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN},
    {LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN}
    }};


void draw_viper_head(int u, int v)
{
    // TODO: Implement
    //May need to design a viper head sprite
    //Tile still need to be designed on paper

    uLCD.BLIT(u, v, 11, 11, &viperHeadSprite[0][0][0]);
}

int viperTailSprite[1][11][11] = {{
    {BLACK, BLACK, BLACK, BLACK, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BLACK, BLACK, BLACK, LIGHTGREEN, BROWN, LIGHTGREEN, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BLACK, BLACK, LIGHTGREEN, BROWN, DARKGREEN, BROWN, LIGHTGREEN, BLACK, BLACK},
    {BLACK, BLACK, LIGHTGREEN, BROWN, DARKGREEN, LIGHTGREEN, DARKGREEN, BROWN, LIGHTGREEN, BLACK, BLACK},
    {LIGHTGREEN, LIGHTGREEN, BROWN, DARKGREEN, LIGHTGREEN, YELLOW, LIGHTGREEN, DARKGREEN, BROWN, LIGHTGREEN, LIGHTGREEN},
    {LIGHTGREEN, BROWN, DARKGREEN, LIGHTGREEN, YELLOW, YELLOW, YELLOW, LIGHTGREEN, DARKGREEN, BROWN, LIGHTGREEN},
    {LIGHTGREEN, LIGHTGREEN, BROWN, DARKGREEN, LIGHTGREEN, YELLOW, LIGHTGREEN, DARKGREEN, BROWN, LIGHTGREEN, LIGHTGREEN},
    {BLACK, BLACK, LIGHTGREEN, BROWN, DARKGREEN, LIGHTGREEN, DARKGREEN, BROWN, LIGHTGREEN, BLACK, BLACK},
    {BLACK, BLACK, BLACK, LIGHTGREEN, BROWN, DARKGREEN, BROWN, LIGHTGREEN, BLACK, BLACK},
    {BLACK, BLACK, BLACK, BLACK, LIGHTGREEN, BROWN, LIGHTGREEN, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BLACK, BLACK, BLACK, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, BLACK, BLACK, BLACK, BLACK}
    }};

void draw_viper_tail(int u, int v)
{
    // TODO: Implement
    //May need to design a viper tail sprite
    //Tile still need to be designed on paper
    uLCD.BLIT(u, v, 11, 11, &viperTailSprite[0][0][0]);
}

int treeSprite[1][11][11] = {{
    {BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK, BLACK},
    {BLACK, BLACK, BLACK, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, BLACK, BLACK, BLACK},
    {BLACK, BLACK, DARKGREEN, DARKGREEN, DARKGREEN,  DARKGREEN,  DARKGREEN, DARKGREEN, DARKGREEN, BLACK, BLACK},
    {BLACK, LIGHTGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, LIGHTGREEN, BLACK},
    {BLACK, LIGHTGREEN, DARKGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, DARKGREEN, LIGHTGREEN, BLACK},
    {BLACK, BLACK, DARKGREEN, DARKGREEN, BROWN, BROWN, BROWN, DARKGREEN, DARKGREEN, BLACK, BLACK},
    {BLACK, BLACK, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BLACK, BLACK},
    {BLACK, BLACK, DARKGREEN, DARKGREEN, BROWN, BLACK, BROWN, DARKGREEN, DARKGREEN, BLACK, BLACK},
    {BLACK, BLACK, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BLACK, BLACK},
    {BLACK, BLACK, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BROWN, BLACK, BLACK}
    }};
    
    
    


void draw_tree(int u, int v) {
    uLCD.BLIT(u, v, 11, 11, &treeSprite[0][0][0]);
}